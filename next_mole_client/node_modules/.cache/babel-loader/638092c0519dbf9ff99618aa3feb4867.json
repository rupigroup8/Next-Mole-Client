{"ast":null,"code":"var _jsxFileName = \"/Users/rgoren/Desktop/nextMoleAppClient/next_mole_client/src/Components/HomePage.jsx\";\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport User from '../images/User.png';\nimport Form from 'react-bootstrap/Form'; //import styled from 'styled-components';\n//import net1 from '../images/net1.png';\n//import bg from '../images/bgHomePage.png';\n\nimport { withRouter } from 'react-router-dom';\nimport logo2 from '../images/logo2.png';\nimport Nav from '../Components/Nav';\nimport UploadJson from './UploadJson';\nimport UploadImage from './UploadImage.jsx';\nimport Category from './Category';\nimport PopNet from './PopNet';\nimport '../css/homecss.css';\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';\nconst MySwal = withReactContent(Swal);\nvar currentCat = null;\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.getCategories();\n    };\n\n    this.getCategories = () => {\n      let api = this.apiUrl + \"CategoryAmount\";\n      console.log(api);\n      fetch(api, {\n        method: 'GET',\n        //mode: 'no-cors',\n        headers: new Headers({\n          'Content-Type': 'application/json; charset=UTF-8'\n        })\n      }).then(res => {\n        console.log('res=', res);\n        return res.json();\n      }).then(result => {\n        console.log(result);\n\n        if (result != null) {\n          //this.setState({existingCategories: result}, ()=>this.getAmountFotCategory())\n          this.setState({\n            existingCategories: result\n          });\n        } else {\n          alert(\"categories wasn't found\");\n        }\n      }, error => {\n        console.log(\"err=\", error);\n      });\n    };\n\n    this.handleSubjectChange = e => {\n      this.setState({\n        jsonSubject: e.target.value\n      });\n    };\n\n    this.handleDescriptionChange = e => {\n      this.setState({\n        jsonDescription: e.target.value\n      });\n    };\n\n    this.getJsonData = data => {\n      this.setState({\n        jsonRowData: JSON.parse(data)\n      });\n    };\n\n    this.getJsonImage = data => {\n      this.setState({\n        jsonImage: data\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      localStorage.setItem('jsonRowData', JSON.stringify(this.state.jsonRowData)); // save the raw data from JSON to local storage\n\n      if (e.target.elements.formSubject.value === '') {\n        MySwal.fire(\"Please insert subject\", \"\", \"warning\");\n      } else if (e.target.elements.formDescription.value === '') {\n        MySwal.fire(\"Please insert description\", \"\", \"warning\");\n      } else if (this.state.jsonRowData === '') {\n        MySwal.fire(\"Please choose file with data\", \"\", \"warning\");\n      } else {\n        //UploadJson.saveJsonToDB();\n        //this.child.getAlert();\n        //this.child2.getAlert();\n        let str = e.target.elements.formSubject.value.replace(/ /g, \"_\");\n        fetch(this.apiUrl + 'Tables', {\n          //POST category\n          method: 'POST',\n          body: JSON.stringify(str),\n          //mode: 'no-cors',\n          headers: new Headers({\n            'Content-type': 'application/json; charset=UTF-8'\n          })\n        }).then(res => {\n          console.log('res=', res);\n          return res.json();\n        }).then(result => {\n          console.log(\"fetch POST= \", result);\n        }, error => {\n          console.log(\"err post=\", error);\n        });\n        var jsonDetails = {\n          subject: this.state.jsonSubject,\n          description: this.state.jsonDescription,\n          rawData: this.state.jsonRowData,\n          img: this.state.jsonImage\n        };\n        localStorage.setItem('jsonDetails', JSON.stringify(jsonDetails)); // save all details to local storage\n\n        console.log(jsonDetails);\n        this.props.history.push({\n          pathname: '/graph',\n          state: {\n            jsonDetails: jsonDetails\n          }\n        });\n      }\n    };\n\n    this.getNetForCat = category => {\n      console.log(\"inside get network\");\n      currentCat = category;\n      let api = this.apiUrl + 'getNetwork/?categoryNAME=' + category;\n      console.log(api);\n      fetch(api, {\n        method: 'GET',\n        //mode: 'no-cors',\n        headers: new Headers({\n          'Content-Type': 'application/json; charset=UTF-8'\n        })\n      }).then(res => {\n        console.log('res=', res);\n        return res.json();\n      }).then(result => {\n        console.log(result);\n\n        if (result != null) {\n          this.setState(prevState => ({\n            networkToShow: { ...prevState.networkToShow,\n              nodes: result.Nodes,\n              links: result.Links\n            }\n          }), () => this.openModal());\n        } else {\n          alert(\"network wasn't found\");\n        }\n      }, error => {\n        console.log(\"err=\", error);\n      });\n    };\n\n    let local = false; //let local = true;\n\n    this.apiUrl = 'https://localhost:44312/api/';\n\n    if (!local) {\n      this.apiUrl = 'http://proj.ruppin.ac.il/igroup8/prod/api/';\n    }\n\n    this.state = {\n      jsonSubject: '',\n      jsonDescription: '',\n      jsonRowData: '',\n      jsonImage: '',\n      existingCategories: [],\n      networkToShow: {\n        nodes: ['no nodes to show'],\n        links: ['no links to show']\n      },\n      open: false\n    };\n    this.openModal = this.openModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n  }\n\n  openModal() {\n    console.log('inside open modal');\n    this.setState({\n      open: true\n    });\n  }\n\n  closeModal() {\n    console.log('inside close modal');\n    this.setState({\n      open: false\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Nav, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      className: \"jumbo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        overflow: \"hidden\",\n        maxHeight: 360,\n        marginTop: 60,\n        maxWidth: \"100%\"\n      },\n      className: \"overlay\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: 6,\n      style: {\n        maxHeight: 250\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        opacity: 0.9,\n        color: 'rgb(22, 25, 22)',\n        marginTop: 50,\n        marginLeft: 10,\n        textAlign: 'left'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }\n    }, \"Welcome To The Mole's\"), /*#__PURE__*/React.createElement(\"h5\", {\n      style: {\n        opacity: 0.9,\n        color: 'rgb(22, 25, 22)',\n        marginLeft: 10,\n        textAlign: 'left'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }\n    }, \"Worlds Creation Site\"), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        opacity: 0.9,\n        color: 'rgb(22, 25, 22)',\n        marginLeft: 10,\n        textAlign: 'left'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }\n    }, \"Here you can create your oun world by choice\")), /*#__PURE__*/React.createElement(Col, {\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      style: {\n        marginTop: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      style: {},\n      className: \"temp\",\n      md: 6,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Col, {\n      style: {\n        paddingRight: 10,\n        marginTop: 10\n      },\n      className: \"temp\",\n      xs: 12,\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 19\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"\",\n      style: {\n        zIndex: '100',\n        Height: 120,\n        maxWidth: 100\n      },\n      src: User,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 101\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 21\n      }\n    }, \"User Name\"))))))), /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(PopNet, {\n      isOpen: this.state.open,\n      closeModal: this.closeModal,\n      category: currentCat,\n      data: this.state.networkToShow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 11\n      }\n    }))), /*#__PURE__*/React.createElement(Container, {\n      style: {\n        marginTop: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }\n    }, this.state.existingCategories.map((item, i) => /*#__PURE__*/React.createElement(Category, {\n      key: i,\n      data: item,\n      getNetwork: this.getNetForCat,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 62\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      style: {\n        width: '100%',\n        marginTop: 30\n      },\n      noValidate: true,\n      onSubmit: e => this.handleSubmit(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Row,\n      controlId: \"formSubject\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      column: true,\n      sm: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 17\n      }\n    }, \"Subject\"), /*#__PURE__*/React.createElement(Col, {\n      sm: \"10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      name: \"subject\",\n      type: \"text\",\n      onChange: this.handleSubjectChange,\n      placeholder: \"Add subject\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Row,\n      controlId: \"formDescription\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      column: true,\n      sm: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 17\n      }\n    }, \"Description\"), /*#__PURE__*/React.createElement(Col, {\n      sm: \"10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      type: \"text\",\n      name: \"description\",\n      onChange: this.handleDescriptionChange,\n      placeholder: \"Add description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Row,\n      controlId: \"formPlaintextPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      column: true,\n      sm: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 21\n      }\n    }, \"Data\"), /*#__PURE__*/React.createElement(Col, {\n      sm: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(UploadJson, {\n      sendJsonData: this.getJsonData,\n      ref: instance => {\n        this.child = instance;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 23\n      }\n    })))), /*#__PURE__*/React.createElement(Col, {\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      column: true,\n      sm: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 21\n      }\n    }, \"Theme Image\"), /*#__PURE__*/React.createElement(Col, {\n      sm: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(UploadImage, {\n      sendJsonImage: this.getJsonImage,\n      ref: instance2 => {\n        this.child2 = instance2;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 23\n      }\n    }))))), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        padding: 100\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sx: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      style: {\n        padding: '1.175rem 0.75rem',\n        fontSize: '1.1rem',\n        marginBottom: '2rem'\n      },\n      type: \"submit\",\n      className: \"btn-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 19\n      }\n    }, \"Build network\")))))));\n  }\n\n}\n\nexport default withRouter(HomePage);","map":{"version":3,"sources":["/Users/rgoren/Desktop/nextMoleAppClient/next_mole_client/src/Components/HomePage.jsx"],"names":["React","Component","Button","Container","Row","Col","User","Form","withRouter","logo2","Nav","UploadJson","UploadImage","Category","PopNet","Swal","withReactContent","MySwal","currentCat","HomePage","constructor","props","componentDidMount","getCategories","api","apiUrl","console","log","fetch","method","headers","Headers","then","res","json","result","setState","existingCategories","alert","error","handleSubjectChange","e","jsonSubject","target","value","handleDescriptionChange","jsonDescription","getJsonData","data","jsonRowData","JSON","parse","getJsonImage","jsonImage","handleSubmit","preventDefault","localStorage","setItem","stringify","state","elements","formSubject","fire","formDescription","str","replace","body","jsonDetails","subject","description","rawData","img","history","push","pathname","getNetForCat","category","prevState","networkToShow","nodes","Nodes","links","Links","openModal","local","open","bind","closeModal","render","overflow","maxHeight","marginTop","maxWidth","opacity","color","marginLeft","textAlign","paddingRight","zIndex","Height","map","item","i","width","instance","child","instance2","child2","padding","fontSize","marginBottom"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport User from '../images/User.png'\nimport Form from 'react-bootstrap/Form';\n//import styled from 'styled-components';\n//import net1 from '../images/net1.png';\n//import bg from '../images/bgHomePage.png';\nimport { withRouter } from 'react-router-dom';\nimport logo2 from '../images/logo2.png';\nimport Nav from '../Components/Nav';\nimport UploadJson from './UploadJson';\nimport UploadImage from './UploadImage.jsx';\nimport Category from './Category';\nimport PopNet from './PopNet';\nimport '../css/homecss.css';\n\n\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';\n\nconst MySwal = withReactContent(Swal)\n\nvar currentCat = null;\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props)\n\n    let local = false;\n    //let local = true;\n    this.apiUrl = 'https://localhost:44312/api/';\n    if (!local) {\n      this.apiUrl = 'http://proj.ruppin.ac.il/igroup8/prod/api/';\n    }\n    this.state = {\n\n      jsonSubject: '',\n      jsonDescription: '',\n      jsonRowData: '',\n      jsonImage: '',\n      existingCategories: [],\n      networkToShow: { nodes: ['no nodes to show'], links: ['no links to show'] },\n      open: false\n    }\n    this.openModal = this.openModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n  }\n\n  componentDidMount = () => {\n\n    this.getCategories();\n  }\n\n\n  getCategories = () => {\n    let api = this.apiUrl + \"CategoryAmount\";\n    console.log(api);\n    fetch(api, {\n      method: 'GET',\n      //mode: 'no-cors',\n      headers: new Headers({\n        'Content-Type': 'application/json; charset=UTF-8',\n      })\n    })\n      .then(res => {\n        console.log('res=', res);\n        return res.json();\n      })\n      .then(result => {\n        console.log(result);\n        if (result != null) {\n          //this.setState({existingCategories: result}, ()=>this.getAmountFotCategory())\n          this.setState({ existingCategories: result })\n\n        }\n        else {\n          alert(\"categories wasn't found\")\n        }\n      },\n        (error) => {\n          console.log(\"err=\", error);\n        });\n  }\n  handleSubjectChange = (e) => {\n    this.setState({ jsonSubject: e.target.value });\n\n  }\n  handleDescriptionChange = (e) => {\n    this.setState({ jsonDescription: e.target.value });\n\n  }\n  getJsonData = (data) => {\n    this.setState({\n      jsonRowData: JSON.parse(data)\n    })\n\n  }\n\n  getJsonImage = (data) => {\n    this.setState({\n      jsonImage: data\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    localStorage.setItem('jsonRowData', JSON.stringify(this.state.jsonRowData));    // save the raw data from JSON to local storage\n    if (e.target.elements.formSubject.value === '') {\n      MySwal.fire(\"Please insert subject\", \"\", \"warning\")\n\n    }\n    else if (e.target.elements.formDescription.value === '') {\n      MySwal.fire(\"Please insert description\", \"\", \"warning\")\n\n    }\n    else if (this.state.jsonRowData === '') {\n      MySwal.fire(\"Please choose file with data\", \"\", \"warning\")\n\n    }\n    else {\n      //UploadJson.saveJsonToDB();\n      //this.child.getAlert();\n      //this.child2.getAlert();\n      let str = e.target.elements.formSubject.value.replace(/ /g, \"_\");\n      fetch(this.apiUrl + 'Tables', {        //POST category\n        method: 'POST',\n        body: JSON.stringify(str),\n        //mode: 'no-cors',\n        headers: new Headers({\n          'Content-type': 'application/json; charset=UTF-8'\n        })\n      })\n        .then(res => {\n          console.log('res=', res);\n          return res.json()\n        })\n        .then(\n          (result) => {\n            console.log(\"fetch POST= \", result);\n          },\n          (error) => {\n            console.log(\"err post=\", error);\n          });\n\n      var jsonDetails = {\n        subject: this.state.jsonSubject,\n        description: this.state.jsonDescription,\n        rawData: this.state.jsonRowData,\n        img: this.state.jsonImage\n      }\n      localStorage.setItem('jsonDetails', JSON.stringify(jsonDetails));    // save all details to local storage\n      console.log(jsonDetails);\n      this.props.history.push({\n        pathname: '/graph',\n        state: {\n          jsonDetails: jsonDetails\n        }\n      });\n    }\n  }\n\n  getNetForCat = (category) => {\n    console.log(\"inside get network\");\n    currentCat = category;\n    let api = this.apiUrl + 'getNetwork/?categoryNAME=' + category;\n    console.log(api);\n    fetch(api, {\n      method: 'GET',\n      //mode: 'no-cors',\n      headers: new Headers({\n        'Content-Type': 'application/json; charset=UTF-8',\n      })\n    })\n      .then(res => {\n        console.log('res=', res);\n        return res.json();\n      })\n      .then(result => {\n        console.log(result);\n        if (result != null) {\n          this.setState(prevState => ({\n            networkToShow: {\n              ...prevState.networkToShow,\n              nodes: result.Nodes,\n              links: result.Links\n            }\n          }), ()=>this.openModal())\n        }\n        else {\n          alert(\"network wasn't found\")\n        }\n      },\n        (error) => {\n          console.log(\"err=\", error);\n        });\n  }\n\n  \n  openModal() {\n    console.log('inside open modal')\n    this.setState({ open: true });\n\n  }\n  \n\ncloseModal() {\n  console.log('inside close modal')\n  this.setState({ open: false });\n}\n  render() {\n    return (\n      <div>\n        <Nav />\n\n        <Container fluid className='jumbo'>\n          <div style={{ overflow: \"hidden\", maxHeight: 360, marginTop: 60, maxWidth: \"100%\" }} className='overlay'>\n            <Row>\n              <Col xs={6} style={{ maxHeight: 250 }}>\n                <h3 style={{ opacity: 0.9, color: 'rgb(22, 25, 22)', marginTop: 50, marginLeft: 10, textAlign: 'left' }}>Welcome To The Mole's</h3>\n                <h5 style={{ opacity: 0.9, color: 'rgb(22, 25, 22)', marginLeft: 10, textAlign: 'left' }}>Worlds Creation Site</h5>\n                <p style={{ opacity: 0.9, color: 'rgb(22, 25, 22)', marginLeft: 10, textAlign: 'left' }}>\n                  Here you can create your oun world by choice</p>\n              </Col>\n              <Col xs={6} >\n\n                <Row style={{ marginTop: 30 }} >\n                  <Col style={{}} className=\"temp\" md={6} xs={12}>\n                    {/* <img alt='' style={{ maxHeight: 140, maxWidth: 140 }} src={logo2} /> */}\n                  </Col>\n                  <Col style={{ paddingRight: 10, marginTop: 10 }} className=\"temp\" xs={12} md={6}> <img alt='' style={{ zIndex: '100', Height: 120, maxWidth: 100 }} src={User} />\n                    <p>User Name</p>\n                  </Col>\n                </Row>\n              </Col>\n            </Row>\n          </div>\n        </Container>\n        <Container>\n          <Row>\n          <PopNet isOpen={this.state.open} closeModal={this.closeModal} category={currentCat} data={this.state.networkToShow}/>\n                    </Row>\n\n        </Container>\n        <Container style={{ marginTop: 30 }}>\n          <Row className='justify-content-center'>\n            {\n              this.state.existingCategories.map((item, i) => <Category key={i} data={item} getNetwork={this.getNetForCat}  />)\n\n            }\n          </Row>\n          <Row>\n            <Form style={{ width: '100%', marginTop: 30 }} noValidate onSubmit={(e) => this.handleSubmit(e)}>\n              <Form.Group as={Row} controlId=\"formSubject\">\n                <Form.Label column sm=\"2\">\n                  Subject\n              </Form.Label>\n                <Col sm=\"10\">\n                  <Form.Control required name='subject' type=\"text\" onChange={this.handleSubjectChange} placeholder=\"Add subject\" />\n                </Col>\n              </Form.Group>\n              <Form.Group as={Row} controlId=\"formDescription\">\n                <Form.Label column sm=\"2\">\n                  Description\n               </Form.Label>\n                <Col sm=\"10\">\n                  <Form.Control required type=\"text\" name='description' onChange={this.handleDescriptionChange} placeholder=\"Add description\" />\n                </Col>\n              </Form.Group>\n              <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n                <Col xs={6}>\n                  <Row>\n                    <Form.Label column sm=\"4\">\n                      Data\n                  </Form.Label>\n                    <Col sm=\"8\">\n                      <UploadJson sendJsonData={this.getJsonData} ref={instance => { this.child = instance; }} />\n                    </Col>\n                  </Row>\n                </Col>\n                <Col xs={6}>\n                  <Row>\n                    <Form.Label column sm=\"4\">\n                      Theme Image\n                   </Form.Label>\n                    <Col sm=\"8\">\n                      <UploadImage sendJsonImage={this.getJsonImage} ref={instance2 => { this.child2 = instance2; }} />\n                    </Col>\n                  </Row>\n                </Col>\n              </Form.Group>\n              <Row style={{ padding: 100 }}>\n                <Col sx={12}>\n                  <Button style={{ padding: '1.175rem 0.75rem', fontSize: '1.1rem', marginBottom: '2rem' }} type=\"submit\" className=\"btn-info\">Build network</Button>\n                </Col>\n              </Row>\n            </Form>\n          </Row>\n        </Container>\n      </div>\n\n    )\n  }\n}\n\nexport default withRouter(HomePage);\n\n"]},"metadata":{},"sourceType":"module"}