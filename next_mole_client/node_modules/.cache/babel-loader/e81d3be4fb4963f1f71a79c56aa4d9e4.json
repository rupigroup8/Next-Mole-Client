{"ast":null,"code":"/* global AFRAME */\nif (typeof AFRAME === 'undefined') {\n  throw new Error('Component attempted to register before AFRAME was available.');\n}\n\nvar accessorFn = require('accessor-fn');\n\nif (accessorFn.hasOwnProperty('default')) {\n  // unwrap default export\n  accessorFn = accessorFn.default;\n}\n\nvar ThreeForceGraph = require('three-forcegraph');\n\nif (ThreeForceGraph.hasOwnProperty('default')) {\n  // unwrap default export\n  ThreeForceGraph = ThreeForceGraph.default;\n}\n\nvar parseJson = function parseJson(prop) {\n  return typeof prop === 'string' ? JSON.parse(prop) : prop; // already parsed\n};\n\nvar parseFn = function parseFn(prop) {\n  if (typeof prop === 'function') return prop; // already a function\n\n  var geval = eval; // Avoid using eval directly https://github.com/rollup/rollup/wiki/Troubleshooting#avoiding-eval\n\n  try {\n    var evalled = geval('(' + prop + ')');\n    return evalled;\n  } catch (e) {} // Can't eval, not a function\n\n\n  return null;\n};\n\nvar parseAccessor = function parseAccessor(prop) {\n  if (!isNaN(parseFloat(prop))) {\n    return parseFloat(prop);\n  } // parse numbers\n\n\n  if (parseFn(prop)) {\n    return parseFn(prop);\n  } // parse functions\n\n\n  return prop; // strings\n};\n/**\n * 3D Force-Directed Graph component for A-Frame.\n */\n\n\nAFRAME.registerComponent('forcegraph', {\n  schema: {\n    jsonUrl: {\n      type: 'string',\n      default: ''\n    },\n    nodes: {\n      parse: parseJson,\n      default: []\n    },\n    links: {\n      parse: parseJson,\n      default: []\n    },\n    numDimensions: {\n      type: 'number',\n      default: 3\n    },\n    dagMode: {\n      type: 'string',\n      default: ''\n    },\n    dagLevelDistance: {\n      type: 'number',\n      default: 0\n    },\n    dagNodeFilter: {\n      parse: parseFn,\n      function: function _function() {\n        return true;\n      }\n    },\n    onDagError: {\n      parse: parseFn,\n      default: undefined\n    },\n    nodeRelSize: {\n      type: 'number',\n      default: 4\n    },\n    // volume per val unit\n    nodeId: {\n      type: 'string',\n      default: 'id'\n    },\n    nodeLabel: {\n      parse: parseAccessor,\n      default: 'name'\n    },\n    nodeDesc: {\n      parse: parseAccessor,\n      default: 'desc'\n    },\n    nodeVal: {\n      parse: parseAccessor,\n      default: 'val'\n    },\n    nodeResolution: {\n      type: 'number',\n      default: 8\n    },\n    // how many slice segments in the sphere's circumference\n    nodeVisibility: {\n      parse: parseAccessor,\n      default: true\n    },\n    nodeColor: {\n      parse: parseAccessor,\n      default: 'color'\n    },\n    nodeAutoColorBy: {\n      parse: parseAccessor,\n      default: ''\n    },\n    // color nodes with the same field equally\n    nodeOpacity: {\n      type: 'number',\n      default: 0.75\n    },\n    nodeThreeObject: {\n      parse: parseAccessor,\n      default: null\n    },\n    nodeThreeObjectExtend: {\n      parse: parseAccessor,\n      default: false\n    },\n    linkSource: {\n      type: 'string',\n      default: 'source'\n    },\n    linkTarget: {\n      type: 'string',\n      default: 'target'\n    },\n    linkLabel: {\n      parse: parseAccessor,\n      default: 'name'\n    },\n    linkDesc: {\n      parse: parseAccessor,\n      default: 'desc'\n    },\n    linkHoverPrecision: {\n      type: 'number',\n      default: 2\n    },\n    linkVisibility: {\n      parse: parseAccessor,\n      default: true\n    },\n    linkColor: {\n      parse: parseAccessor,\n      default: 'color'\n    },\n    linkAutoColorBy: {\n      parse: parseAccessor,\n      default: ''\n    },\n    // color links with the same field equally\n    linkOpacity: {\n      type: 'number',\n      default: 0.2\n    },\n    linkWidth: {\n      parse: parseAccessor,\n      default: 0\n    },\n    linkResolution: {\n      type: 'number',\n      default: 6\n    },\n    // how many radial segments in each line cylinder's geometry\n    linkCurvature: {\n      parse: parseAccessor,\n      default: 0\n    },\n    linkCurveRotation: {\n      parse: parseAccessor,\n      default: 0\n    },\n    linkMaterial: {\n      parse: parseAccessor,\n      default: null\n    },\n    linkThreeObject: {\n      parse: parseAccessor,\n      default: null\n    },\n    linkThreeObjectExtend: {\n      parse: parseAccessor,\n      default: false\n    },\n    linkPositionUpdate: {\n      parse: parseFn,\n      default: null\n    },\n    linkDirectionalArrowLength: {\n      parse: parseAccessor,\n      default: 0\n    },\n    linkDirectionalArrowColor: {\n      parse: parseAccessor,\n      default: null\n    },\n    linkDirectionalArrowRelPos: {\n      parse: parseAccessor,\n      default: 0.5\n    },\n    // value between 0<>1 indicating the relative pos along the (exposed) line\n    linkDirectionalArrowResolution: {\n      type: 'number',\n      default: 8\n    },\n    // how many slice segments in the arrow's conic circumference\n    linkDirectionalParticles: {\n      parse: parseAccessor,\n      default: 0\n    },\n    // animate photons travelling in the link direction\n    linkDirectionalParticleSpeed: {\n      parse: parseAccessor,\n      default: 0.01\n    },\n    // in link length ratio per frame\n    linkDirectionalParticleWidth: {\n      parse: parseAccessor,\n      default: 0.5\n    },\n    linkDirectionalParticleColor: {\n      parse: parseAccessor,\n      default: null\n    },\n    linkDirectionalParticleResolution: {\n      type: 'number',\n      default: 4\n    },\n    // how many slice segments in the particle sphere's circumference\n    onNodeCenterHover: {\n      parse: parseFn,\n      default: function _default() {}\n    },\n    onLinkCenterHover: {\n      parse: parseFn,\n      default: function _default() {}\n    },\n    forceEngine: {\n      type: 'string',\n      default: 'd3'\n    },\n    // 'd3' or 'ngraph'\n    d3AlphaMin: {\n      type: 'number',\n      default: 0\n    },\n    d3AlphaDecay: {\n      type: 'number',\n      default: 0.0228\n    },\n    d3VelocityDecay: {\n      type: 'number',\n      default: 0.4\n    },\n    ngraphPhysics: {\n      parse: parseJson,\n      default: null\n    },\n    warmupTicks: {\n      type: 'int',\n      default: 0\n    },\n    // how many times to tick the force engine at init before starting to render\n    cooldownTicks: {\n      type: 'int',\n      default: 1e18\n    },\n    // Simulate infinity (int parser doesn't accept Infinity object)\n    cooldownTime: {\n      type: 'int',\n      default: 15000\n    },\n    // ms\n    onEngineTick: {\n      parse: parseFn,\n      default: function _default() {}\n    },\n    onEngineStop: {\n      parse: parseFn,\n      default: function _default() {}\n    }\n  },\n  // Bind component methods\n  getGraphBbox: function getGraphBbox() {\n    if (!this.forceGraph) {\n      // Got here before component init -> initialize forceGraph\n      this.forceGraph = new ThreeForceGraph();\n    }\n\n    return this.forceGraph.getGraphBbox();\n  },\n  emitParticle: function emitParticle() {\n    if (!this.forceGraph) {\n      // Got here before component init -> initialize forceGraph\n      this.forceGraph = new ThreeForceGraph();\n    }\n\n    var forceGraph = this.forceGraph;\n    var returnVal = forceGraph.emitParticle.apply(forceGraph, arguments);\n    return returnVal === forceGraph ? this // return self, not the inner forcegraph component\n    : returnVal;\n  },\n  d3Force: function d3Force() {\n    if (!this.forceGraph) {\n      // Got here before component init -> initialize forceGraph\n      this.forceGraph = new ThreeForceGraph();\n    }\n\n    var forceGraph = this.forceGraph;\n    var returnVal = forceGraph.d3Force.apply(forceGraph, arguments);\n    return returnVal === forceGraph ? this // return self, not the inner forcegraph component\n    : returnVal;\n  },\n  d3ReheatSimulation: function d3ReheatSimulation() {\n    this.forceGraph && this.forceGraph.d3ReheatSimulation();\n    return this;\n  },\n  refresh: function refresh() {\n    this.forceGraph && this.forceGraph.refresh();\n    return this;\n  },\n  init: function init() {\n    var state = this.state = {}; // Internal state\n    // Add info msg\n\n    state.infoEl = document.createElement('a-text');\n    state.infoEl.setAttribute('position', '0 -0.1 -1'); // Canvas center\n\n    state.infoEl.setAttribute('width', 1);\n    state.infoEl.setAttribute('align', 'center');\n    state.infoEl.setAttribute('color', 'lavender'); // Setup tooltip\n\n    state.tooltipEl = document.createElement('a-text');\n    state.tooltipEl.setAttribute('position', '0 -0.5 -1'); // Aligned to canvas bottom\n\n    state.tooltipEl.setAttribute('width', 2);\n    state.tooltipEl.setAttribute('align', 'center');\n    state.tooltipEl.setAttribute('color', 'lavender');\n    state.tooltipEl.setAttribute('value', ''); // Setup sub-tooltip\n\n    state.subTooltipEl = document.createElement('a-text');\n    state.subTooltipEl.setAttribute('position', '0 -0.6 -1'); // Aligned to canvas bottom\n\n    state.subTooltipEl.setAttribute('width', 1.5);\n    state.subTooltipEl.setAttribute('align', 'center');\n    state.subTooltipEl.setAttribute('color', 'lavender');\n    state.subTooltipEl.setAttribute('value', ''); // Get camera dom element and attach fixed view elements to camera\n\n    var cameraEl = document.querySelector('a-entity[camera], a-camera');\n    cameraEl.appendChild(state.infoEl);\n    cameraEl.appendChild(state.tooltipEl);\n    cameraEl.appendChild(state.subTooltipEl); // Keep reference to Three camera object\n\n    state.cameraObj = cameraEl.object3D.children.filter(function (child) {\n      return child.type === 'PerspectiveCamera';\n    })[0]; // On camera switch\n\n    this.el.sceneEl.addEventListener('camera-set-active', function (evt) {\n      // Switch camera reference\n      state.cameraObj = evt.detail.cameraEl.components.camera.camera;\n    }); // setup FG object\n\n    if (!this.forceGraph) this.forceGraph = new ThreeForceGraph(); // initialize forceGraph if it doesn't exist yet\n\n    this.el.object3D.add(this.forceGraph);\n    this.forceGraph.onLoading(function () {\n      state.infoEl.setAttribute('value', 'Loading...'); // Add loading msg\n    }).onFinishLoading(function () {\n      state.infoEl.setAttribute('value', '');\n    });\n  },\n  remove: function remove() {\n    // Clean-up elems\n    this.state.infoEl.remove();\n    this.state.tooltipEl.remove();\n    this.state.subTooltipEl.remove();\n  },\n  update: function update(oldData) {\n    var comp = this;\n    var elData = this.data;\n    var diff = AFRAME.utils.diff(elData, oldData);\n    var fgProps = ['jsonUrl', 'numDimensions', 'dagMode', 'dagLevelDistance', 'dagNodeFilter', 'onDagError', 'nodeRelSize', 'nodeId', 'nodeVal', 'nodeResolution', 'nodeVisibility', 'nodeColor', 'nodeAutoColorBy', 'nodeOpacity', 'nodeThreeObject', 'nodeThreeObjectExtend', 'linkSource', 'linkTarget', 'linkVisibility', 'linkColor', 'linkAutoColorBy', 'linkOpacity', 'linkWidth', 'linkResolution', 'linkCurvature', 'linkCurveRotation', 'linkMaterial', 'linkThreeObject', 'linkThreeObjectExtend', 'linkPositionUpdate', 'linkDirectionalArrowLength', 'linkDirectionalArrowColor', 'linkDirectionalArrowRelPos', 'linkDirectionalArrowResolution', 'linkDirectionalParticles', 'linkDirectionalParticleSpeed', 'linkDirectionalParticleWidth', 'linkDirectionalParticleColor', 'linkDirectionalParticleResolution', 'forceEngine', 'd3AlphaMin', 'd3AphaDecay', 'd3VelocityDecay', 'ngraphPhysics', 'warmupTicks', 'cooldownTicks', 'cooldownTime', 'onEngineTick', 'onEngineStop'];\n    fgProps.filter(function (p) {\n      return p in diff;\n    }).forEach(function (p) {\n      comp.forceGraph[p](elData[p] !== '' ? elData[p] : null);\n    }); // Convert blank values into nulls\n\n    if ('nodes' in diff || 'links' in diff) {\n      comp.forceGraph.graphData({\n        nodes: elData.nodes,\n        links: elData.links\n      });\n    }\n  },\n  tick: function tick(t, td) {\n    // Update tooltip\n    var centerRaycaster = new THREE.Raycaster();\n    centerRaycaster.linePrecision = this.data.linkHoverPrecision;\n    centerRaycaster.setFromCamera(new THREE.Vector2(0, 0), // Canvas center\n    this.state.cameraObj);\n    var intersects = centerRaycaster.intersectObjects(this.forceGraph.children).filter(function (o) {\n      // Check only node/link objects\n      return ['node', 'link'].indexOf(o.object.__graphObjType) !== -1;\n    }).sort(function (a, b) {\n      // Prioritize nodes over links\n      return isNode(b) - isNode(a);\n\n      function isNode(o) {\n        return o.object.__graphObjType === 'node';\n      }\n    });\n    var topObject = intersects.length ? intersects[0].object : null;\n\n    if (topObject !== this.state.hoverObj) {\n      var prevObjType = this.state.hoverObj ? this.state.hoverObj.__graphObjType : null;\n      var prevObjData = this.state.hoverObj ? this.state.hoverObj.__data : null;\n      var objType = topObject ? topObject.__graphObjType : null;\n      var objData = topObject ? topObject.__data : null;\n\n      if (prevObjType && prevObjType !== objType) {\n        // Hover out\n        this.data['on' + (prevObjType === 'node' ? 'Node' : 'Link') + 'CenterHover'](null, prevObjData);\n      }\n\n      if (objType) {\n        // Hover in\n        this.data['on' + (objType === 'node' ? 'Node' : 'Link') + 'CenterHover'](objData, prevObjType === objType ? prevObjData : null);\n      }\n\n      this.state.hoverObj = topObject;\n      this.state.tooltipEl.setAttribute('value', topObject ? accessorFn(this.data[topObject.__graphObjType + 'Label'])(topObject.__data) || '' : '');\n      this.state.subTooltipEl.setAttribute('value', topObject ? accessorFn(this.data[topObject.__graphObjType + 'Desc'])(topObject.__data) || '' : '');\n    } // Run force-graph ticker\n\n\n    this.forceGraph.tickFrame();\n  }\n});","map":{"version":3,"sources":["/Users/rgoren/Desktop/nextMoleAppClient/next_mole_client/node_modules/aframe-forcegraph-component/index.js"],"names":["AFRAME","Error","accessorFn","require","hasOwnProperty","default","ThreeForceGraph","parseJson","prop","JSON","parse","parseFn","geval","eval","evalled","e","parseAccessor","isNaN","parseFloat","registerComponent","schema","jsonUrl","type","nodes","links","numDimensions","dagMode","dagLevelDistance","dagNodeFilter","function","onDagError","undefined","nodeRelSize","nodeId","nodeLabel","nodeDesc","nodeVal","nodeResolution","nodeVisibility","nodeColor","nodeAutoColorBy","nodeOpacity","nodeThreeObject","nodeThreeObjectExtend","linkSource","linkTarget","linkLabel","linkDesc","linkHoverPrecision","linkVisibility","linkColor","linkAutoColorBy","linkOpacity","linkWidth","linkResolution","linkCurvature","linkCurveRotation","linkMaterial","linkThreeObject","linkThreeObjectExtend","linkPositionUpdate","linkDirectionalArrowLength","linkDirectionalArrowColor","linkDirectionalArrowRelPos","linkDirectionalArrowResolution","linkDirectionalParticles","linkDirectionalParticleSpeed","linkDirectionalParticleWidth","linkDirectionalParticleColor","linkDirectionalParticleResolution","onNodeCenterHover","onLinkCenterHover","forceEngine","d3AlphaMin","d3AlphaDecay","d3VelocityDecay","ngraphPhysics","warmupTicks","cooldownTicks","cooldownTime","onEngineTick","onEngineStop","getGraphBbox","forceGraph","emitParticle","returnVal","apply","arguments","d3Force","d3ReheatSimulation","refresh","init","state","infoEl","document","createElement","setAttribute","tooltipEl","subTooltipEl","cameraEl","querySelector","appendChild","cameraObj","object3D","children","filter","child","el","sceneEl","addEventListener","evt","detail","components","camera","add","onLoading","onFinishLoading","remove","update","oldData","comp","elData","data","diff","utils","fgProps","p","forEach","graphData","tick","t","td","centerRaycaster","THREE","Raycaster","linePrecision","setFromCamera","Vector2","intersects","intersectObjects","o","indexOf","object","__graphObjType","sort","a","b","isNode","topObject","length","hoverObj","prevObjType","prevObjData","__data","objType","objData","tickFrame"],"mappings":"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","sourcesContent":["/* global AFRAME */\n\nif (typeof AFRAME === 'undefined') {\n  throw new Error('Component attempted to register before AFRAME was available.');\n}\n\nvar accessorFn = require('accessor-fn');\nif (accessorFn.hasOwnProperty('default')) {\n  // unwrap default export\n  accessorFn = accessorFn.default;\n}\n\nvar ThreeForceGraph = require('three-forcegraph');\nif (ThreeForceGraph.hasOwnProperty('default')) {\n  // unwrap default export\n  ThreeForceGraph = ThreeForceGraph.default;\n}\n\nvar parseJson = function (prop) {\n  return (typeof prop === 'string')\n    ? JSON.parse(prop)\n    : prop; // already parsed\n};\n\nvar parseFn = function (prop) {\n  if (typeof prop === 'function') return prop; // already a function\n  var geval = eval; // Avoid using eval directly https://github.com/rollup/rollup/wiki/Troubleshooting#avoiding-eval\n  try {\n    var evalled = geval('(' + prop + ')');\n    return evalled;\n  } catch (e) {} // Can't eval, not a function\n  return null;\n};\n\nvar parseAccessor = function (prop) {\n  if (!isNaN(parseFloat(prop))) { return parseFloat(prop); } // parse numbers\n  if (parseFn(prop)) { return parseFn(prop); } // parse functions\n  return prop; // strings\n};\n\n/**\n * 3D Force-Directed Graph component for A-Frame.\n */\nAFRAME.registerComponent('forcegraph', {\n  schema: {\n    jsonUrl: { type: 'string', default: '' },\n    nodes: { parse: parseJson, default: [] },\n    links: { parse: parseJson, default: [] },\n    numDimensions: { type: 'number', default: 3 },\n    dagMode: { type: 'string', default: '' },\n    dagLevelDistance: { type: 'number', default: 0 },\n    dagNodeFilter: { parse: parseFn, function() { return true; }},\n    onDagError: { parse: parseFn, default: undefined },\n    nodeRelSize: { type: 'number', default: 4 }, // volume per val unit\n    nodeId: { type: 'string', default: 'id' },\n    nodeLabel: { parse: parseAccessor, default: 'name' },\n    nodeDesc: { parse: parseAccessor, default: 'desc' },\n    nodeVal: { parse: parseAccessor, default: 'val' },\n    nodeResolution: { type: 'number', default: 8 }, // how many slice segments in the sphere's circumference\n    nodeVisibility: { parse: parseAccessor, default: true },\n    nodeColor: { parse: parseAccessor, default: 'color' },\n    nodeAutoColorBy: { parse: parseAccessor, default: '' }, // color nodes with the same field equally\n    nodeOpacity: { type: 'number', default: 0.75 },\n    nodeThreeObject: { parse: parseAccessor, default: null },\n    nodeThreeObjectExtend: { parse: parseAccessor, default: false },\n    linkSource: { type: 'string', default: 'source' },\n    linkTarget: { type: 'string', default: 'target' },\n    linkLabel: { parse: parseAccessor, default: 'name' },\n    linkDesc: { parse: parseAccessor, default: 'desc' },\n    linkHoverPrecision: { type: 'number', default: 2 },\n    linkVisibility: { parse: parseAccessor, default: true },\n    linkColor: { parse: parseAccessor, default: 'color' },\n    linkAutoColorBy: { parse: parseAccessor, default: '' }, // color links with the same field equally\n    linkOpacity: { type: 'number', default: 0.2 },\n    linkWidth: { parse: parseAccessor, default: 0 },\n    linkResolution: { type: 'number', default: 6 }, // how many radial segments in each line cylinder's geometry\n    linkCurvature: { parse: parseAccessor, default: 0 },\n    linkCurveRotation: { parse: parseAccessor, default: 0 },\n    linkMaterial: { parse: parseAccessor, default: null },\n    linkThreeObject: { parse: parseAccessor, default: null },\n    linkThreeObjectExtend: { parse: parseAccessor, default: false },\n    linkPositionUpdate: { parse: parseFn, default: null },\n    linkDirectionalArrowLength: { parse: parseAccessor, default: 0 },\n    linkDirectionalArrowColor: { parse: parseAccessor, default: null },\n    linkDirectionalArrowRelPos: { parse: parseAccessor, default: 0.5 }, // value between 0<>1 indicating the relative pos along the (exposed) line\n    linkDirectionalArrowResolution: { type: 'number', default: 8 }, // how many slice segments in the arrow's conic circumference\n    linkDirectionalParticles: { parse: parseAccessor, default: 0 }, // animate photons travelling in the link direction\n    linkDirectionalParticleSpeed: { parse: parseAccessor, default: 0.01 }, // in link length ratio per frame\n    linkDirectionalParticleWidth: { parse: parseAccessor, default: 0.5 },\n    linkDirectionalParticleColor: { parse: parseAccessor, default: null },\n    linkDirectionalParticleResolution: { type: 'number', default: 4 }, // how many slice segments in the particle sphere's circumference\n    onNodeCenterHover: { parse: parseFn, default: function () {} },\n    onLinkCenterHover: { parse: parseFn, default: function () {} },\n    forceEngine: { type: 'string', default: 'd3' }, // 'd3' or 'ngraph'\n    d3AlphaMin: { type: 'number', default: 0 },\n    d3AlphaDecay: { type: 'number', default: 0.0228 },\n    d3VelocityDecay: { type: 'number', default: 0.4 },\n    ngraphPhysics: { parse: parseJson, default: null },\n    warmupTicks: { type: 'int', default: 0 }, // how many times to tick the force engine at init before starting to render\n    cooldownTicks: { type: 'int', default: 1e18 }, // Simulate infinity (int parser doesn't accept Infinity object)\n    cooldownTime: { type: 'int', default: 15000 }, // ms\n    onEngineTick: { parse: parseFn, default: function () {} },\n    onEngineStop: { parse: parseFn, default: function () {} }\n  },\n\n  // Bind component methods\n  getGraphBbox: function() {\n    if (!this.forceGraph) {\n      // Got here before component init -> initialize forceGraph\n      this.forceGraph = new ThreeForceGraph();\n    }\n\n    return this.forceGraph.getGraphBbox();\n  },\n  emitParticle: function () {\n    if (!this.forceGraph) {\n      // Got here before component init -> initialize forceGraph\n      this.forceGraph = new ThreeForceGraph();\n    }\n\n    const forceGraph = this.forceGraph;\n    const returnVal = forceGraph.emitParticle.apply(forceGraph, arguments);\n\n    return returnVal === forceGraph\n      ? this // return self, not the inner forcegraph component\n      : returnVal;\n  },\n\n  d3Force: function () {\n    if (!this.forceGraph) {\n      // Got here before component init -> initialize forceGraph\n      this.forceGraph = new ThreeForceGraph();\n    }\n\n    const forceGraph = this.forceGraph;\n    const returnVal = forceGraph.d3Force.apply(forceGraph, arguments);\n\n    return returnVal === forceGraph\n      ? this // return self, not the inner forcegraph component\n      : returnVal;\n  },\n\n  d3ReheatSimulation: function () {\n    this.forceGraph && this.forceGraph.d3ReheatSimulation();\n    return this;\n  },\n\n  refresh: function () {\n    this.forceGraph && this.forceGraph.refresh();\n    return this;\n  },\n\n  init: function () {\n    var state = this.state = {}; // Internal state\n\n    // Add info msg\n    state.infoEl = document.createElement('a-text');\n    state.infoEl.setAttribute('position', '0 -0.1 -1'); // Canvas center\n    state.infoEl.setAttribute('width', 1);\n    state.infoEl.setAttribute('align', 'center');\n    state.infoEl.setAttribute('color', 'lavender');\n\n    // Setup tooltip\n    state.tooltipEl = document.createElement('a-text');\n    state.tooltipEl.setAttribute('position', '0 -0.5 -1'); // Aligned to canvas bottom\n    state.tooltipEl.setAttribute('width', 2);\n    state.tooltipEl.setAttribute('align', 'center');\n    state.tooltipEl.setAttribute('color', 'lavender');\n    state.tooltipEl.setAttribute('value', '');\n\n    // Setup sub-tooltip\n    state.subTooltipEl = document.createElement('a-text');\n    state.subTooltipEl.setAttribute('position', '0 -0.6 -1'); // Aligned to canvas bottom\n    state.subTooltipEl.setAttribute('width', 1.5);\n    state.subTooltipEl.setAttribute('align', 'center');\n    state.subTooltipEl.setAttribute('color', 'lavender');\n    state.subTooltipEl.setAttribute('value', '');\n\n    // Get camera dom element and attach fixed view elements to camera\n    var cameraEl = document.querySelector('a-entity[camera], a-camera');\n    cameraEl.appendChild(state.infoEl);\n    cameraEl.appendChild(state.tooltipEl);\n    cameraEl.appendChild(state.subTooltipEl);\n\n    // Keep reference to Three camera object\n    state.cameraObj = cameraEl.object3D.children\n      .filter(function (child) { return child.type === 'PerspectiveCamera'; })[0];\n\n    // On camera switch\n    this.el.sceneEl.addEventListener('camera-set-active', function (evt) {\n      // Switch camera reference\n      state.cameraObj = evt.detail.cameraEl.components.camera.camera;\n    });\n\n    // setup FG object\n    if (!this.forceGraph) this.forceGraph = new ThreeForceGraph(); // initialize forceGraph if it doesn't exist yet\n    this.el.object3D.add(this.forceGraph);\n\n    this.forceGraph\n      .onLoading(function () {\n        state.infoEl.setAttribute('value', 'Loading...'); // Add loading msg\n      })\n      .onFinishLoading(function () {\n        state.infoEl.setAttribute('value', '');\n      });\n  },\n\n  remove: function () {\n    // Clean-up elems\n    this.state.infoEl.remove();\n    this.state.tooltipEl.remove();\n    this.state.subTooltipEl.remove();\n  },\n\n  update: function (oldData) {\n    var comp = this;\n    var elData = this.data;\n    var diff = AFRAME.utils.diff(elData, oldData);\n\n    var fgProps = [\n      'jsonUrl',\n      'numDimensions',\n      'dagMode',\n      'dagLevelDistance',\n      'dagNodeFilter',\n      'onDagError',\n      'nodeRelSize',\n      'nodeId',\n      'nodeVal',\n      'nodeResolution',\n      'nodeVisibility',\n      'nodeColor',\n      'nodeAutoColorBy',\n      'nodeOpacity',\n      'nodeThreeObject',\n      'nodeThreeObjectExtend',\n      'linkSource',\n      'linkTarget',\n      'linkVisibility',\n      'linkColor',\n      'linkAutoColorBy',\n      'linkOpacity',\n      'linkWidth',\n      'linkResolution',\n      'linkCurvature',\n      'linkCurveRotation',\n      'linkMaterial',\n      'linkThreeObject',\n      'linkThreeObjectExtend',\n      'linkPositionUpdate',\n      'linkDirectionalArrowLength',\n      'linkDirectionalArrowColor',\n      'linkDirectionalArrowRelPos',\n      'linkDirectionalArrowResolution',\n      'linkDirectionalParticles',\n      'linkDirectionalParticleSpeed',\n      'linkDirectionalParticleWidth',\n      'linkDirectionalParticleColor',\n      'linkDirectionalParticleResolution',\n      'forceEngine',\n      'd3AlphaMin',\n      'd3AphaDecay',\n      'd3VelocityDecay',\n      'ngraphPhysics',\n      'warmupTicks',\n      'cooldownTicks',\n      'cooldownTime',\n      'onEngineTick',\n      'onEngineStop'\n    ];\n\n    fgProps\n      .filter(function (p) { return p in diff; })\n      .forEach(function (p) { comp.forceGraph[p](elData[p] !== '' ? elData[p] : null); }); // Convert blank values into nulls\n\n    if ('nodes' in diff || 'links' in diff) {\n      comp.forceGraph.graphData({\n        nodes: elData.nodes,\n        links: elData.links\n      });\n    }\n  },\n\n  tick: function (t, td) {\n    // Update tooltip\n    var centerRaycaster = new THREE.Raycaster();\n    centerRaycaster.linePrecision = this.data.linkHoverPrecision;\n    centerRaycaster.setFromCamera(\n      new THREE.Vector2(0, 0), // Canvas center\n      this.state.cameraObj\n    );\n\n    var intersects = centerRaycaster.intersectObjects(this.forceGraph.children)\n      .filter(function (o) { // Check only node/link objects\n        return ['node', 'link'].indexOf(o.object.__graphObjType) !== -1;\n      })\n      .sort(function (a, b) { // Prioritize nodes over links\n        return isNode(b) - isNode(a);\n        function isNode (o) { return o.object.__graphObjType === 'node'; }\n      });\n\n    var topObject = intersects.length ? intersects[0].object : null;\n\n    if (topObject !== this.state.hoverObj) {\n      const prevObjType = this.state.hoverObj ? this.state.hoverObj.__graphObjType : null;\n      const prevObjData = this.state.hoverObj ? this.state.hoverObj.__data : null;\n      const objType = topObject ? topObject.__graphObjType : null;\n      const objData = topObject ? topObject.__data : null;\n\n      if (prevObjType && prevObjType !== objType) {\n        // Hover out\n        this.data['on' + (prevObjType === 'node' ? 'Node' : 'Link') + 'CenterHover'](null, prevObjData);\n      }\n      if (objType) {\n        // Hover in\n        this.data['on' + (objType === 'node' ? 'Node' : 'Link') + 'CenterHover'](objData, prevObjType === objType ? prevObjData : null);\n      }\n\n      this.state.hoverObj = topObject;\n      this.state.tooltipEl.setAttribute('value', topObject ? accessorFn(this.data[topObject.__graphObjType + 'Label'])(topObject.__data) || '' : '');\n      this.state.subTooltipEl.setAttribute('value', topObject ? accessorFn(this.data[topObject.__graphObjType + 'Desc'])(topObject.__data) || '' : '');\n    }\n\n    // Run force-graph ticker\n    this.forceGraph.tickFrame();\n  }\n});\n"]},"metadata":{},"sourceType":"script"}