{"ast":null,"code":"/**\n * This module provides all required forces to regular ngraph.physics.simulator\n * to make it 3D simulator. Ideally ngraph.physics.simulator should operate\n * with vectors, but on practices that showed performance decrease... Maybe\n * I was doing it wrong, will see if I can refactor/throw away this module.\n */\nmodule.exports = createLayout;\ncreateLayout.get2dLayout = require('ngraph.forcelayout');\n\nfunction createLayout(graph, physicsSettings) {\n  var merge = require('ngraph.merge');\n\n  physicsSettings = merge(physicsSettings, {\n    createQuadTree: require('ngraph.quadtreebh3d'),\n    createBounds: require('./lib/bounds'),\n    createDragForce: require('./lib/dragForce'),\n    createSpringForce: require('./lib/springForce'),\n    integrator: getIntegrator(physicsSettings),\n    createBody: require('./lib/createBody')\n  });\n  return createLayout.get2dLayout(graph, physicsSettings);\n}\n\nfunction getIntegrator(physicsSettings) {\n  if (physicsSettings && physicsSettings.integrator === 'verlet') {\n    return require('./lib/verletIntegrator.js');\n  }\n\n  return require('./lib/eulerIntegrator');\n}","map":{"version":3,"sources":["/Users/rgoren/Desktop/nextMoleAppClient/next_mole_client/node_modules/ngraph.forcelayout3d/index.js"],"names":["module","exports","createLayout","get2dLayout","require","graph","physicsSettings","merge","createQuadTree","createBounds","createDragForce","createSpringForce","integrator","getIntegrator","createBody"],"mappings":"AAAA;;;;;;AAMAA,MAAM,CAACC,OAAP,GAAiBC,YAAjB;AACAA,YAAY,CAACC,WAAb,GAA2BC,OAAO,CAAC,oBAAD,CAAlC;;AAEA,SAASF,YAAT,CAAsBG,KAAtB,EAA6BC,eAA7B,EAA8C;AAC5C,MAAIC,KAAK,GAAGH,OAAO,CAAC,cAAD,CAAnB;;AACAE,EAAAA,eAAe,GAAGC,KAAK,CAACD,eAAD,EAAkB;AACnCE,IAAAA,cAAc,EAAEJ,OAAO,CAAC,qBAAD,CADY;AAEnCK,IAAAA,YAAY,EAAEL,OAAO,CAAC,cAAD,CAFc;AAGnCM,IAAAA,eAAe,EAAEN,OAAO,CAAC,iBAAD,CAHW;AAInCO,IAAAA,iBAAiB,EAAEP,OAAO,CAAC,mBAAD,CAJS;AAKnCQ,IAAAA,UAAU,EAAEC,aAAa,CAACP,eAAD,CALU;AAMnCQ,IAAAA,UAAU,EAAEV,OAAO,CAAC,kBAAD;AANgB,GAAlB,CAAvB;AASA,SAAOF,YAAY,CAACC,WAAb,CAAyBE,KAAzB,EAAgCC,eAAhC,CAAP;AACD;;AAED,SAASO,aAAT,CAAuBP,eAAvB,EAAwC;AACtC,MAAIA,eAAe,IAAIA,eAAe,CAACM,UAAhB,KAA+B,QAAtD,EAAgE;AAC9D,WAAOR,OAAO,CAAC,2BAAD,CAAd;AACD;;AAED,SAAOA,OAAO,CAAC,uBAAD,CAAd;AACD","sourcesContent":["/**\n * This module provides all required forces to regular ngraph.physics.simulator\n * to make it 3D simulator. Ideally ngraph.physics.simulator should operate\n * with vectors, but on practices that showed performance decrease... Maybe\n * I was doing it wrong, will see if I can refactor/throw away this module.\n */\nmodule.exports = createLayout;\ncreateLayout.get2dLayout = require('ngraph.forcelayout');\n\nfunction createLayout(graph, physicsSettings) {\n  var merge = require('ngraph.merge');\n  physicsSettings = merge(physicsSettings, {\n        createQuadTree: require('ngraph.quadtreebh3d'),\n        createBounds: require('./lib/bounds'),\n        createDragForce: require('./lib/dragForce'),\n        createSpringForce: require('./lib/springForce'),\n        integrator: getIntegrator(physicsSettings),\n        createBody: require('./lib/createBody')\n      });\n\n  return createLayout.get2dLayout(graph, physicsSettings);\n}\n\nfunction getIntegrator(physicsSettings) {\n  if (physicsSettings && physicsSettings.integrator === 'verlet') {\n    return require('./lib/verletIntegrator.js');\n  }\n\n  return require('./lib/eulerIntegrator')\n}\n"]},"metadata":{},"sourceType":"script"}