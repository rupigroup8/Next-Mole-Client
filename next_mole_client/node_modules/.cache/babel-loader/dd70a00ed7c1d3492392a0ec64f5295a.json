{"ast":null,"code":"var _jsxFileName = \"/Users/rgoren/Desktop/nextMoleAppClient/next_mole_client/src/Components/FoundDataInFile.jsx\";\nimport React, { Component } from 'react';\nimport { Card, ListGroup, CardDeck, InputGroup, FormControl, Button } from 'react-bootstrap';\nimport { withRouter } from 'react-router-dom';\n\nclass FoundDataInFile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = btn => {\n      let valTitle = '';\n      let valColor = '';\n      let valState = '';\n\n      if (btn.target.value === 'chacked') {\n        valTitle = 'select all';\n        valColor = 'outline-info';\n        valState = 'allUnchacked';\n        btn.target.value = 'Unchacked';\n      } else {\n        valTitle = 'remove all';\n        valColor = 'outline-danger';\n        valState = 'allChacked';\n        btn.target.value = 'chacked';\n      }\n\n      console.log(btn.target.value);\n      this.setState({\n        btnTitle: valTitle,\n        btnVariant: valColor,\n        btnState: valState\n      }, () => {\n        this.props.removeAll(this.state.btnState);\n      });\n    };\n\n    this.state = {\n      btnTitle: 'remove all',\n      btnVariant: 'outline-danger',\n      btnState: 'allChacked'\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }\n    }, \"Network Details\"), /*#__PURE__*/React.createElement(Card.Subtitle, {\n      className: \"text-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }\n    }, \"Subject:\"), /*#__PURE__*/React.createElement(Card.Text, {\n      className: \"text-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }\n    }, this.props.details.subject), /*#__PURE__*/React.createElement(Card.Subtitle, {\n      className: \"text-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }\n    }, \"Description:\"), /*#__PURE__*/React.createElement(Card.Text, {\n      className: \"text-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }\n    }, this.props.details.description)), /*#__PURE__*/React.createElement(Card.Body, {\n      className: \"text-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Subtitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, \"This is what we find in your JSON file :\"), \"total of \", this.props.details.rawData.length, \" nodes\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 79\n      }\n    }), this.props.data.length, \" keys pottential to be Id\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 74\n      }\n    }), this.props.connections.length, \" different connection types\")), /*#__PURE__*/React.createElement(CardDeck, {\n      className: \"ml-5 mr-5 pb-5 pt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      style: {\n        width: '18rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 29\n      }\n    }, \"Potential Id\"), /*#__PURE__*/React.createElement(Card.Subtitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 29\n      }\n    }, \"we searched for a key that can use as identical id, and this is what we found:\")), /*#__PURE__*/React.createElement(ListGroup, {\n      variant: \"flush\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }\n    }, Object.values(this.props.data).map((item, i) => {\n      return /*#__PURE__*/React.createElement(ListGroup.Item, {\n        key: i,\n        className: \"text-left\",\n        style: {\n          paddingBottom: '.25rem',\n          paddingTop: '.25rem'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 41\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 144\n        }\n      }, item.k), \" apears \", /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 167\n        }\n      }, item.v.length), \" times, ratio is: \", /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 207\n        }\n      }, item.ratio));\n    }))), /*#__PURE__*/React.createElement(Card, {\n      style: {\n        width: '18rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 29\n      }\n    }, \"Connection Type\"), /*#__PURE__*/React.createElement(Card.Subtitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 29\n      }\n    }, \"List of the connections we found are:\"), /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 29\n      }\n    }, \"you can uncheck connection type and see what happend\")), this.props.connections.map((item, i) => {\n      return /*#__PURE__*/React.createElement(InputGroup, {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(InputGroup.Prepend, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(InputGroup.Checkbox, {\n        value: item.name,\n        onChange: this.props.passedFunction,\n        checked: item.isChecked,\n        \"aria-label\": \"Checkbox for following text input\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 45\n        }\n      })), /*#__PURE__*/React.createElement(FormControl, {\n        placeholder: item.name + \" \" + item.conAmount + \" times\",\n        \"aria-label\": \"Text input with checkbox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 41\n        }\n      }));\n    }), /*#__PURE__*/React.createElement(Button, {\n      className: \"mx-auto my-2\",\n      variant: this.state.btnVariant,\n      value: \"chacked\",\n      onClick: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 26\n      }\n    }, this.state.btnTitle))));\n  }\n\n}\n\nexport default withRouter(FoundDataInFile);","map":{"version":3,"sources":["/Users/rgoren/Desktop/nextMoleAppClient/next_mole_client/src/Components/FoundDataInFile.jsx"],"names":["React","Component","Card","ListGroup","CardDeck","InputGroup","FormControl","Button","withRouter","FoundDataInFile","constructor","props","handleChange","btn","valTitle","valColor","valState","target","value","console","log","setState","btnTitle","btnVariant","btnState","removeAll","state","bind","render","details","subject","description","rawData","length","data","connections","width","Object","values","map","item","i","paddingBottom","paddingTop","k","v","ratio","name","passedFunction","isChecked","conAmount"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,UAApC,EAAgDC,WAAhD,EAA8DC,MAA9D,QAA2E,iBAA3E;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,eAAN,SAA8BR,SAA9B,CAAwC;AAEpCS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAWnBC,YAXmB,GAWHC,GAAD,IAAS;AACpB,UAAIC,QAAQ,GAAG,EAAf;AACA,UAAIC,QAAQ,GAAG,EAAf;AACA,UAAIC,QAAQ,GAAG,EAAf;;AACA,UAAGH,GAAG,CAACI,MAAJ,CAAWC,KAAX,KAAmB,SAAtB,EAAgC;AAC5BJ,QAAAA,QAAQ,GAAG,YAAX;AACAC,QAAAA,QAAQ,GAAG,cAAX;AACAC,QAAAA,QAAQ,GAAG,cAAX;AACAH,QAAAA,GAAG,CAACI,MAAJ,CAAWC,KAAX,GAAmB,WAAnB;AAEH,OAND,MAOI;AACAJ,QAAAA,QAAQ,GAAG,YAAX;AACAC,QAAAA,QAAQ,GAAG,gBAAX;AACAC,QAAAA,QAAQ,GAAG,YAAX;AACAH,QAAAA,GAAG,CAACI,MAAJ,CAAWC,KAAX,GAAmB,SAAnB;AACH;;AACDC,MAAAA,OAAO,CAACC,GAAR,CAAYP,GAAG,CAACI,MAAJ,CAAWC,KAAvB;AACA,WAAKG,QAAL,CAAc;AAACC,QAAAA,QAAQ,EAAER,QAAX;AAAqBS,QAAAA,UAAU,EAAER,QAAjC;AAA2CS,QAAAA,QAAQ,EAAER;AAArD,OAAd,EAA8E,MAAI;AAC9E,aAAKL,KAAL,CAAWc,SAAX,CAAqB,KAAKC,KAAL,CAAWF,QAAhC;AACH,OAFD;AAIH,KAjCkB;;AAGf,SAAKE,KAAL,GAAa;AACTJ,MAAAA,QAAQ,EAAE,YADD;AAETC,MAAAA,UAAU,EAAC,gBAFF;AAGTC,MAAAA,QAAQ,EAAE;AAHD,KAAb;AAKA,SAAKZ,YAAL,GAAoB,KAAKA,YAAL,CAAkBe,IAAlB,CAAuB,IAAvB,CAApB;AAEH;;AAyBDC,EAAAA,MAAM,GAAG;AAEL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,eAEI,oBAAC,IAAD,CAAM,QAAN;AAAe,MAAA,SAAS,EAAC,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAKI,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,SAAS,EAAC,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkC,KAAKjB,KAAL,CAAWkB,OAAX,CAAmBC,OAArD,CALJ,eAMI,oBAAC,IAAD,CAAM,QAAN;AAAe,MAAA,SAAS,EAAC,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANJ,eASI,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,SAAS,EAAC,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkC,KAAKnB,KAAL,CAAWkB,OAAX,CAAmBE,WAArD,CATJ,CADJ,eAYI,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,SAAS,EAAC,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,IAAD,CAAM,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDADA,eAIkB,KAAKpB,KAAL,CAAWkB,OAAX,CAAmBG,OAAnB,CAA2BC,MAJ7C,yBAI0D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJ1D,EAKK,KAAKtB,KAAL,CAAWuB,IAAX,CAAgBD,MALrB,4CAKqD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALrD,EAMK,KAAKtB,KAAL,CAAWwB,WAAX,CAAuBF,MAN5B,gCAZJ,CADJ,eAqBI,oBAAC,QAAD;AAAU,MAAA,SAAS,EAAC,qBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEG,QAAAA,KAAK,EAAE;AAAT,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,oBAAC,IAAD,CAAM,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wFAFJ,CADJ,eAOI,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQC,MAAM,CAACC,MAAP,CAAc,KAAK3B,KAAL,CAAWuB,IAAzB,EAA+BK,GAA/B,CAAmC,CAACC,IAAD,EAAOC,CAAP,KAAa;AAC5C,0BACI,oBAAC,SAAD,CAAW,IAAX;AAAgB,QAAA,GAAG,EAAEA,CAArB;AAAwB,QAAA,SAAS,EAAC,WAAlC;AAA8C,QAAA,KAAK,EAAE;AAACC,UAAAA,aAAa,EAAE,QAAhB;AAA0BC,UAAAA,UAAU,EAAE;AAAtC,SAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAuG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIH,IAAI,CAACI,CAAT,CAAvG,2BAA8H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIJ,IAAI,CAACK,CAAL,CAAOZ,MAAX,CAA9H,qCAAsK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIO,IAAI,CAACM,KAAT,CAAtK,CADJ;AAGH,KAJD,CAFR,CAPJ,CADJ,eAkBI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEV,QAAAA,KAAK,EAAE;AAAT,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,eAEI,oBAAC,IAAD,CAAM,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAFJ,eAKI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DALJ,CADJ,EAUQ,KAAKzB,KAAL,CAAWwB,WAAX,CAAuBI,GAAvB,CAA2B,CAACC,IAAD,EAAOC,CAAP,KAAa;AACpC,0BACI,oBAAC,UAAD;AAAY,QAAA,GAAG,EAAEA,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,UAAD,CAAY,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,UAAD,CAAY,QAAZ;AAAqB,QAAA,KAAK,EAAED,IAAI,CAACO,IAAjC;AAAuC,QAAA,QAAQ,EAAE,KAAKpC,KAAL,CAAWqC,cAA5D;AAA4E,QAAA,OAAO,EAAER,IAAI,CAACS,SAA1F;AAAqG,sBAAW,mCAAhH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,eAII,oBAAC,WAAD;AAAa,QAAA,WAAW,EAAET,IAAI,CAACO,IAAL,GAAY,GAAZ,GAAkBP,IAAI,CAACU,SAAvB,GAAmC,QAA7D;AAAuE,sBAAW,0BAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,CADJ;AAQH,KATD,CAVR,eAqBK,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,cAAlB;AAAiC,MAAA,OAAO,EAAE,KAAKxB,KAAL,CAAWH,UAArD;AAAiE,MAAA,KAAK,EAAC,SAAvE;AAAiF,MAAA,OAAO,EAAE,KAAKX,YAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8G,KAAKc,KAAL,CAAWJ,QAAzH,CArBL,CAlBJ,CArBJ,CADJ;AAmEH;;AA1GmC;;AA6GxC,eAAed,UAAU,CAACC,eAAD,CAAzB","sourcesContent":["import React, { Component } from 'react';\nimport { Card, ListGroup, CardDeck, InputGroup, FormControl , Button} from 'react-bootstrap';\nimport { withRouter } from 'react-router-dom';\n\nclass FoundDataInFile extends Component {\n\n    constructor(props) {\n        super(props)\n      \n        this.state = {\n            btnTitle: 'remove all',\n            btnVariant:'outline-danger',\n            btnState: 'allChacked'\n        }\n        this.handleChange = this.handleChange.bind(this);\n\n    }\n    handleChange = (btn) => {\n        let valTitle = '';\n        let valColor = '';\n        let valState = '';\n        if(btn.target.value==='chacked'){\n            valTitle = 'select all';\n            valColor = 'outline-info';\n            valState = 'allUnchacked';     \n            btn.target.value = 'Unchacked';\n       \n        }\n        else{\n            valTitle = 'remove all';\n            valColor = 'outline-danger';\n            valState = 'allChacked';\n            btn.target.value = 'chacked';\n        }\n        console.log(btn.target.value)\n        this.setState({btnTitle: valTitle, btnVariant: valColor, btnState: valState} ,()=>{\n            this.props.removeAll(this.state.btnState); \n        })\n\n    }\n\n    render() {\n\n        return (\n            <div>\n                <Card>\n                    <Card.Header>\n                        <Card.Title >Network Details</Card.Title>\n                        <Card.Subtitle className=\"text-left\">\n                            Subject:\n                            </Card.Subtitle>\n                        <Card.Text className=\"text-left\">{this.props.details.subject}</Card.Text>\n                        <Card.Subtitle className=\"text-left\">\n                            Description:\n                            </Card.Subtitle>\n                        <Card.Text className=\"text-left\">{this.props.details.description}</Card.Text>\n                    </Card.Header>\n                    <Card.Body className=\"text-left\">\n                    <Card.Subtitle>\n                            This is what we find in your JSON file :\n                            </Card.Subtitle>\n                            total of {this.props.details.rawData.length} nodes<br />\n                        {this.props.data.length} keys pottential to be Id<br />\n                        {this.props.connections.length} different connection types</Card.Body>\n                </Card>\n                <CardDeck className=\"ml-5 mr-5 pb-5 pt-5\">\n                    <Card style={{ width: '18rem' }}>\n                        <Card.Header>\n                            <Card.Title>Potential Id</Card.Title>\n                            <Card.Subtitle>\n                                we searched for a key that can use as identical id, and this is what we found:\n                            </Card.Subtitle>\n                        </Card.Header>\n                        <ListGroup variant=\"flush\">\n                            {\n                                Object.values(this.props.data).map((item, i) => {\n                                    return (\n                                        <ListGroup.Item key={i} className='text-left' style={{paddingBottom: '.25rem', paddingTop: '.25rem'}}> <b>{item.k}</b> apears <b>{item.v.length}</b> times, ratio is: <b>{item.ratio}</b></ListGroup.Item>\n                                    )\n                                })\n                            }\n                        </ListGroup>\n                    </Card>\n                    <Card style={{ width: '18rem' }}>\n                        <Card.Header>\n                            <Card.Title>Connection Type</Card.Title>\n                            <Card.Subtitle>\n                                List of the connections we found are:\n                            </Card.Subtitle>\n                            <Card.Text>you can uncheck connection type and see what happend</Card.Text>\n                        </Card.Header>\n                        \n                        {\n                            this.props.connections.map((item, i) => {\n                                return (\n                                    <InputGroup key={i}>\n                                        <InputGroup.Prepend>\n                                            <InputGroup.Checkbox value={item.name} onChange={this.props.passedFunction} checked={item.isChecked} aria-label=\"Checkbox for following text input\" />\n                                        </InputGroup.Prepend>\n                                        <FormControl placeholder={item.name + \" \" + item.conAmount + \" times\"} aria-label=\"Text input with checkbox\" />\n                                    </InputGroup>\n                                )\n                            })\n                        }\n                         <Button className=\"mx-auto my-2\" variant={this.state.btnVariant} value=\"chacked\" onClick={this.handleChange}>{this.state.btnTitle}</Button>\n\n                    </Card>\n                </CardDeck>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(FoundDataInFile);\n"]},"metadata":{},"sourceType":"module"}