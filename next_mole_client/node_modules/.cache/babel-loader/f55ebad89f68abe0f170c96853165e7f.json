{"ast":null,"code":"import _classCallCheck from\"/Users/rgoren/Desktop/nextMoleAppClient/next_mole_client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/rgoren/Desktop/nextMoleAppClient/next_mole_client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/rgoren/Desktop/nextMoleAppClient/next_mole_client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/rgoren/Desktop/nextMoleAppClient/next_mole_client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import'filepond/dist/filepond.min.css';import{FilePond,registerPlugin}from'react-filepond';import{withRouter}from'react-router-dom';import FilePondPluginImageExifOrientation from'filepond-plugin-image-exif-orientation';import FilePondPluginImagePreview from'filepond-plugin-image-preview';import'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css';import Swal from'sweetalert2';import withReactContent from'sweetalert2-react-content';var MySwal=withReactContent(Swal);registerPlugin(FilePondPluginImageExifOrientation,FilePondPluginImagePreview);var UploadImage=/*#__PURE__*/function(_React$Component){_inherits(UploadImage,_React$Component);var _super=_createSuper(UploadImage);function UploadImage(){var _this;_classCallCheck(this,UploadImage);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={fileImg:''};_this.AddPDF=function(error,file){console.log(file);if(_this.fileValidate(file)){// read file\n//this.readJsonImage(file.file);\n_this.props.sendJsonImage(file);_this.setState({fileImg:file});}};_this.fileValidate=function(file){console.log(file.fileExtension);var isValid=true;if(file.fileExtension!=='jpeg'&file.fileExtension!=='png'&file.fileExtension!=='jpg'){MySwal.fire({title:'Error!',text:'You can only choose png or jpeg files to uploaded',icon:'error',confirmButtonText:'Ok'});file.abortLoad();isValid=false;}if(isValid){console.log(file.fileExtension);console.log(file.fileSize);}return isValid;};_this.saveImgToDB=function(file){console.log(file.file);var data=new FormData();data.append(\"UploadedFile\",file.file);fetch('http://localhost:44312/api/uploadPic',{method:'post',contentType:false,processData:false,mode:'no-cors',body:data}).then(function(data){console.log(data);}).catch(function(error){console.log(error);});};return _this;}_createClass(UploadImage,[{key:\"getAlert\",value:function getAlert(){alert('child2');}},{key:\"getAlert\",value:function getAlert(){alert('clicked');}},{key:\"handleInit\",value:function handleInit(){console.log('FilePond instance has initialised',this.pond);var fil=this.pond;console.log(fil);}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(FilePond,{allowMultiple:false,onaddfile:this.AddPDF}));}}]);return UploadImage;}(React.Component);//export default withRouter(UploadImage); \nexport{UploadImage as default};","map":{"version":3,"sources":["/Users/rgoren/Desktop/nextMoleAppClient/next_mole_client/src/Components/UploadImage.jsx"],"names":["React","FilePond","registerPlugin","withRouter","FilePondPluginImageExifOrientation","FilePondPluginImagePreview","Swal","withReactContent","MySwal","UploadImage","state","fileImg","AddPDF","error","file","console","log","fileValidate","props","sendJsonImage","setState","fileExtension","isValid","fire","title","text","icon","confirmButtonText","abortLoad","fileSize","saveImgToDB","data","FormData","append","fetch","method","contentType","processData","mode","body","then","catch","alert","pond","fil","Component"],"mappings":"4qBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,gCAAP,CACA,OAASC,QAAT,CAAmBC,cAAnB,KAAyC,gBAAzC,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,kCAAP,KAA+C,wCAA/C,CACA,MAAOC,CAAAA,0BAAP,KAAuC,+BAAvC,CACA,MAAO,sEAAP,CACA,MAAOC,CAAAA,IAAP,KAAiB,aAAjB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,2BAA7B,CAGA,GAAMC,CAAAA,MAAM,CAAGD,gBAAgB,CAACD,IAAD,CAA/B,CACAJ,cAAc,CAACE,kCAAD,CAAqCC,0BAArC,CAAd,C,GAEqBI,CAAAA,W,2VAalBC,K,CAAQ,CACPC,OAAO,CAAE,EADF,C,OAIPC,M,CAAS,SAACC,KAAD,CAAQC,IAAR,CAAiB,CACtBC,OAAO,CAACC,GAAR,CAAYF,IAAZ,EACA,GAAI,MAAKG,YAAL,CAAkBH,IAAlB,CAAJ,CAA6B,CACzB;AACA;AACA,MAAKI,KAAL,CAAWC,aAAX,CAAyBL,IAAzB,EACA,MAAKM,QAAL,CAAc,CAAET,OAAO,CAAEG,IAAX,CAAd,EACH,CACJ,C,OAIDG,Y,CAAe,SAACH,IAAD,CAAU,CACrBC,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACO,aAAjB,EACA,GAAIC,CAAAA,OAAO,CAAG,IAAd,CACA,GAAIR,IAAI,CAACO,aAAL,GAAuB,MAAvB,CAAgCP,IAAI,CAACO,aAAL,GAAuB,KAAvD,CAA+DP,IAAI,CAACO,aAAL,GAAuB,KAA1F,CAAiG,CACzFb,MAAM,CAACe,IAAP,CAAY,CACRC,KAAK,CAAE,QADC,CAERC,IAAI,CAAE,mDAFE,CAGRC,IAAI,CAAE,OAHE,CAIRC,iBAAiB,CAAE,IAJX,CAAZ,EAMAb,IAAI,CAACc,SAAL,GACAN,OAAO,CAAG,KAAV,CACP,CACD,GAAIA,OAAJ,CAAa,CACTP,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACO,aAAjB,EACAN,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACe,QAAjB,EAEH,CACD,MAAOP,CAAAA,OAAP,CACH,C,OAMDQ,W,CAAc,SAAChB,IAAD,CAAU,CACpBC,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACA,IAAjB,EACA,GAAMiB,CAAAA,IAAI,CAAG,GAAIC,CAAAA,QAAJ,EAAb,CACAD,IAAI,CAACE,MAAL,CAAY,cAAZ,CAA4BnB,IAAI,CAACA,IAAjC,EACAoB,KAAK,CAAC,sCAAD,CAAyC,CAC1CC,MAAM,CAAE,MADkC,CAE1CC,WAAW,CAAE,KAF6B,CAG1CC,WAAW,CAAE,KAH6B,CAI1CC,IAAI,CAAE,SAJoC,CAK1CC,IAAI,CAAER,IALoC,CAAzC,CAAL,CAMGS,IANH,CAMQ,SAAUT,IAAV,CAAgB,CACpBhB,OAAO,CAACC,GAAR,CAAYe,IAAZ,EACH,CARD,EAQGU,KARH,CAQS,SAAC5B,KAAD,CAAW,CAChBE,OAAO,CAACC,GAAR,CAAYH,KAAZ,EACH,CAVD,EAWH,C,kFA3CU,CACP6B,KAAK,CAAC,QAAD,CAAL,CACD,C,2CAsBQ,CACPA,KAAK,CAAC,SAAD,CAAL,CACD,C,+CAmBU,CACT3B,OAAO,CAACC,GAAR,CAAY,mCAAZ,CAAiD,KAAK2B,IAAtD,EACA,GAAIC,CAAAA,GAAG,CAAG,KAAKD,IAAf,CACA5B,OAAO,CAACC,GAAR,CAAY4B,GAAZ,EACH,C,uCAEQ,CACL,mBACI,4CACI,oBAAC,QAAD,EAAU,aAAa,CAAE,KAAzB,CAAgC,SAAS,CAAE,KAAKhC,MAAhD,EADJ,CADJ,CAKH,C,yBAnFoCZ,KAAK,CAAC6C,S,EAqF/C;OArFqBpC,W","sourcesContent":["import React from 'react';\nimport 'filepond/dist/filepond.min.css';\nimport { FilePond, registerPlugin } from 'react-filepond';\nimport { withRouter } from 'react-router-dom';\nimport FilePondPluginImageExifOrientation from 'filepond-plugin-image-exif-orientation';\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css';\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';\n\n\nconst MySwal = withReactContent(Swal)\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview);\n\nexport default class UploadImage extends React.Component {\n\n    /*constructor(props) {\n        super(props);\n        this.state = {\n            files: [{\n                source: 'photo.jpeg',\n                options: {\n                    type: 'local'\n                }\n            }]\n        };\n    }\n*/ state = {\n    fileImg: ''\n}\n\n    AddPDF = (error, file) => {\n        console.log(file)\n        if (this.fileValidate(file)) {\n            // read file\n            //this.readJsonImage(file.file);\n            this.props.sendJsonImage(file);\n            this.setState({ fileImg: file })\n        }\n    }\n    getAlert() {\n        alert('child2');\n      }\n    fileValidate = (file) => {\n        console.log(file.fileExtension)\n        let isValid = true;\n        if (file.fileExtension !== 'jpeg' & file.fileExtension !== 'png' & file.fileExtension !== 'jpg') {\n                MySwal.fire({\n                    title: 'Error!',\n                    text: 'You can only choose png or jpeg files to uploaded',\n                    icon: 'error',\n                    confirmButtonText: 'Ok'\n                })\n                file.abortLoad();\n                isValid = false;\n        }\n        if (isValid) {\n            console.log(file.fileExtension);\n            console.log(file.fileSize);\n            \n        }\n        return isValid;\n    }\n\n    getAlert() {\n        alert('clicked');\n      }\n    \n    saveImgToDB = (file) => {\n        console.log(file.file);\n        const data = new FormData();\n        data.append(\"UploadedFile\", file.file);\n        fetch('http://localhost:44312/api/uploadPic', {\n            method: 'post',\n            contentType: false,\n            processData: false,\n            mode: 'no-cors',\n            body: data\n        }).then(function (data) {\n            console.log(data);\n        }).catch((error) => {\n            console.log(error);\n        });\n    }\n\n    handleInit() {\n        console.log('FilePond instance has initialised', this.pond);\n        let fil = this.pond;\n        console.log(fil);\n    }\n\n    render() {\n        return (\n            <div>\n                <FilePond allowMultiple={false} onaddfile={this.AddPDF} />\n            </div>\n        )\n    }\n}\n//export default withRouter(UploadImage); \n\n\n\n"]},"metadata":{},"sourceType":"module"}