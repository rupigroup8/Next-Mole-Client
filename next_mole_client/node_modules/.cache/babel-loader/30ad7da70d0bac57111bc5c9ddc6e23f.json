{"ast":null,"code":"module.exports = integrate;\n\nfunction integrate(bodies, timeStep) {\n  var tx = 0,\n      ty = 0,\n      tz = 0,\n      i,\n      max = bodies.length;\n\n  for (i = 0; i < max; ++i) {\n    var body = bodies[i],\n        coeff = timeStep * timeStep / body.mass;\n    body.pos.x = 2 * body.pos.x - body.prevPos.x + body.force.x * coeff;\n    body.pos.y = 2 * body.pos.y - body.prevPos.y + body.force.y * coeff;\n    body.pos.z = 2 * body.pos.z - body.prevPos.z + body.force.z * coeff;\n    tx += Math.abs(body.pos.x - body.prevPos.x);\n    ty += Math.abs(body.pos.y - body.prevPos.y);\n    tz += Math.abs(body.pos.z - body.prevPos.z);\n  }\n\n  return (tx * tx + ty * ty + tz * tz) / bodies.length;\n}","map":{"version":3,"sources":["/Users/rgoren/Desktop/nextMoleAppClient/next_mole_client/node_modules/ngraph.forcelayout3d/lib/verletIntegrator.js"],"names":["module","exports","integrate","bodies","timeStep","tx","ty","tz","i","max","length","body","coeff","mass","pos","x","prevPos","force","y","z","Math","abs"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiBC,SAAjB;;AAEA,SAASA,SAAT,CAAmBC,MAAnB,EAA2BC,QAA3B,EAAqC;AACnC,MAAIC,EAAE,GAAG,CAAT;AAAA,MAAYC,EAAE,GAAG,CAAjB;AAAA,MAAoBC,EAAE,GAAG,CAAzB;AAAA,MACIC,CADJ;AAAA,MACOC,GAAG,GAAGN,MAAM,CAACO,MADpB;;AAGA,OAAKF,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGC,GAAhB,EAAqB,EAAED,CAAvB,EAA0B;AACxB,QAAIG,IAAI,GAAGR,MAAM,CAACK,CAAD,CAAjB;AAAA,QACEI,KAAK,GAAGR,QAAQ,GAAGA,QAAX,GAAsBO,IAAI,CAACE,IADrC;AAGAF,IAAAA,IAAI,CAACG,GAAL,CAASC,CAAT,GAAa,IAAIJ,IAAI,CAACG,GAAL,CAASC,CAAb,GAAiBJ,IAAI,CAACK,OAAL,CAAaD,CAA9B,GAAkCJ,IAAI,CAACM,KAAL,CAAWF,CAAX,GAAeH,KAA9D;AACAD,IAAAA,IAAI,CAACG,GAAL,CAASI,CAAT,GAAa,IAAIP,IAAI,CAACG,GAAL,CAASI,CAAb,GAAiBP,IAAI,CAACK,OAAL,CAAaE,CAA9B,GAAkCP,IAAI,CAACM,KAAL,CAAWC,CAAX,GAAeN,KAA9D;AACAD,IAAAA,IAAI,CAACG,GAAL,CAASK,CAAT,GAAa,IAAIR,IAAI,CAACG,GAAL,CAASK,CAAb,GAAiBR,IAAI,CAACK,OAAL,CAAaG,CAA9B,GAAkCR,IAAI,CAACM,KAAL,CAAWE,CAAX,GAAeP,KAA9D;AAEAP,IAAAA,EAAE,IAAIe,IAAI,CAACC,GAAL,CAASV,IAAI,CAACG,GAAL,CAASC,CAAT,GAAaJ,IAAI,CAACK,OAAL,CAAaD,CAAnC,CAAN;AACAT,IAAAA,EAAE,IAAIc,IAAI,CAACC,GAAL,CAASV,IAAI,CAACG,GAAL,CAASI,CAAT,GAAaP,IAAI,CAACK,OAAL,CAAaE,CAAnC,CAAN;AACAX,IAAAA,EAAE,IAAIa,IAAI,CAACC,GAAL,CAASV,IAAI,CAACG,GAAL,CAASK,CAAT,GAAaR,IAAI,CAACK,OAAL,CAAaG,CAAnC,CAAN;AACD;;AAED,SAAO,CAACd,EAAE,GAAGA,EAAL,GAAUC,EAAE,GAAGA,EAAf,GAAoBC,EAAE,GAAGA,EAA1B,IAA8BJ,MAAM,CAACO,MAA5C;AACD","sourcesContent":["module.exports = integrate;\n\nfunction integrate(bodies, timeStep) {\n  var tx = 0, ty = 0, tz = 0,\n      i, max = bodies.length;\n\n  for (i = 0; i < max; ++i) {\n    var body = bodies[i],\n      coeff = timeStep * timeStep / body.mass;\n\n    body.pos.x = 2 * body.pos.x - body.prevPos.x + body.force.x * coeff;\n    body.pos.y = 2 * body.pos.y - body.prevPos.y + body.force.y * coeff;\n    body.pos.z = 2 * body.pos.z - body.prevPos.z + body.force.z * coeff;\n\n    tx += Math.abs(body.pos.x - body.prevPos.x)\n    ty += Math.abs(body.pos.y - body.prevPos.y)\n    tz += Math.abs(body.pos.z - body.prevPos.z)\n  }\n\n  return (tx * tx + ty * ty + tz * tz)/bodies.length;\n}\n"]},"metadata":{},"sourceType":"script"}